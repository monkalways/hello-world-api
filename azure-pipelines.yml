# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
  - master

pool:
  vmImage: "windows-latest" # examples of other options: 'macOS-10.15', 'windows-2019', 'ubuntu-18.04'

variables:
  buildConfiguration: "Release"

steps:
  - task: UseDotNet@2
    displayName: "Install .NET Core SDK"
    inputs:
      version: "5.0.x"
      performMultiLevelLookup: true

  # - task: DotNetCoreCLI@2
  #   displayName: "dotnet restore"
  #   inputs:
  #     command: "restore"

  # - task: DotNetCoreCLI@2
  #   displayName: "dotnet build"
  #   inputs:
  #     command: "build"
  #     arguments: "--configuration $(buildConfiguration)"

  # - task: DotNetCoreCLI@2
  #   displayName: "dotnet test"
  #   inputs:
  #     command: "test"
  #     projects: "**/*Tests/*.csproj"
  #     arguments: '--configuration $(buildConfiguration) --collect:"XPlat Code Coverage" /p:CoverletOutputFormat=cobertura /p:CoverletOutput=$(Build.SourcesDirectory)/TestResults/Coverage/'
  #     publishTestResults: true

  # - task: PublishCodeCoverageResults@1
  #   displayName: "Publish code coverage report"
  #   inputs:
  #     codeCoverageTool: "Cobertura"
  #     summaryFileLocation: "$(Build.SourcesDirectory)/**/coverage.cobertura.xml"

  # - task: DotNetCoreCLI@2
  #   inputs:
  #     command: "publish"
  #     publishWebProjects: True
  #     arguments: "--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)"
  #     zipAfterPublish: True

  # - task: PublishPipelineArtifact@1
  #   inputs:
  #     targetPath: "$(Build.ArtifactStagingDirectory)"
  #     artifactName: "hello-world-api"
